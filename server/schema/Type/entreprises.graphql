scalar Date
scalar Time
type entreprise{
    id: String!
    nom: String!
    logo: String!
    adresse: String!
    tel: String!
    adr_fb: String
    type_service: String!
    NIF_STAT: String
    slogan: String!
    description: String!
    date_abonnement: Date!
    type_abonnement: String!
    mode_payement: String!
    date_payement: Date!
    status: Int
    heure_ouverture: Time
    users: String
}

type getOneEtp{
    id: String
    nom: String
    logo: String
    adresse: String
    tel: String
    adr_fb: String
    type_service: String
    NIF_STAT: String
    slogan: String
    description: String
    date_abonnement: Date
    type_abonnement: String
    mode_payement: String
    date_payement: Date
    status: Int
    heure_ouverture: Time
    users: String
}

type getAllEtp{
    nbr_page: Int!
    items: [getOneEtp!]
}

######Query and Mutation######
type Query{
    getOneEntreprise(id: String!):getOneEtp!
    getAllEntreprise(page:Int!):getAllEtp!
}

type Mutation{
    create_entreprise(
    nom: String
    logo: String
    adresse: String
    tel: String
    adr_fb: String
    type_service: String
    NIF_STAT: String
    slogan: String
    description: String
    date_abonnement: Date
    type_abonnement: String
    mode_payement: String
    date_payement: Date
    heure_ouverture: Time):entreprise

    delEtp(id: String!):entreprise!

    updateEtp(
    id: String!
    nom: String
    logo: String
    adresse: String
    tel: String
    adr_fb: String
    type_service: String
    NIF_STAT: String
    slogan: String
    description: String
    date_abonnement: Date
    type_abonnement: String
    mode_payement: String
    date_payement: Date
    heure_ouverture: Time):entreprise
}


